{"./":{"url":"./","title":"《HTTP 权威指南》","keywords":"","body":"《HTTP 权威指南》 这个笔记目的是精简整理书中知识，方便查询回顾 ——不忘初心，方得始终 《HTTP: The Definitive Guide》 [dɪˈfɪnətɪv] HTTP 是在万维网上进行通信时所使用的协议方案，它有很多应用，最著名的是用于 Web 浏览器和 Web 服务器之间的双工通信。 双工通信：在同一时刻信息可以进行双向传输，例如打电话时既能说又能听 本书将 HTTP 中一些互相关联且常被误解的规则梳理清楚，并编写了一系列基于各种主题的章节介绍 HTTP 各方面的特性，对 HTTP “为什么”这样做进行了详细的解释，而不仅仅停留在它是“怎么做”的。 HTTP：Web 的基础 第 1 章 HTTP 概述 第 2 章，URL 第 3 章，HTTP 报文 第 4 章，HTTP 链接管理 HTTP 结构 第 5 章，Web 服务器结构 第 6 章，HTTP 代理服务器 第 7 章，Web 缓存 第 8 章，网管与应用服务器 第 9 章，Web 上的客户端 第 10 章，HTTP-NG 协议 识别、认证与安全 第 11 章，识别用户 第 12 章，验证用户 第 13 章，摘要认证 第 14 章，密码体系、数字证书、SSL 实体、编码和国际化 第 15 章，HTTP 内容的结构 第 16 章，Web 标准 第 17 章，协商可接受内容的机制 内容发布与分发 第 18 章，部署服务器及 HTTP 对虚拟网站托管的支持 第 19 章，创建 Web 内容并装载到 Web 服务器的技术 第 20 章，Web 流量分流 第 21 章，日志格式 附录 A，URI 方案支持的协议 B，HTTP 响应代码 C，HTTP 首部字段参考 D，MIME 类型 E，Base-64 编码 F，实现 HTTP 中的各种认证方案 G，HTTP 首部的语言标签值 H，支持国际化 HTTP 的字符编码 TODO [x] 添加 gitbook [x] 附录 D 链接 [x] part 1 1.3 MIME [ ] 附录 D 表格使用文字识别转换成文字，方便查询和查看 powered by Gitbook更新时间： 2020-06-17 14:48:05 "},"part1.html":{"url":"part1.html","title":"HTTP：Web 的基础","keywords":"","body":"第一部分 HTTP：Web 的基础 概述 HTTP 协议。 第 1 章 HTTP 概述 powered by Gitbook更新时间： 2020-06-16 18:32:08 "},"chapter1.html":{"url":"chapter1.html","title":"第 1 章 HTTP 概述","keywords":"","body":"第 1 章 HTTP 概述 Web 浏览器、服务器和相关的 Web 应用程序都是通过 HTTP 相互通信的。HTTP 是现代全球因特网中使用的公共语言。 HTTP HTTP 使用的是可靠的传输协议，即使数据来自地球另一端，也能确保数据不会在传输过程中损坏或混乱。这样用户不用担心其完整性，应用程序开发人员也无需担心 HTTP 通信在传输中被破坏、复制或畸变了，开发人员可以专注于应用程序特有细节的编写，而不用考虑因特网中的一些缺陷和问题。 Web 客户端和服务器 Web 内容被存储在 Web 服务器上，Web 服务器使用的是 HTTP 协议，因此常被称为 HTTP 服务器。 Web 客户端和服务器 平常最常见的 HTTP 客户端就是 Web 浏览器。浏览一个页面时，浏览器向服务器发送一条 HTTP 请求，服务器如果找到期望的对象，就将对象、对象类型、对象长度和其他信息放在 HTTP 响应中发送给客户端。 资源（resource） Web 服务器是 Web 资源（Web resource）的宿主。Web 资源是 Web 内容的源头。 Web 资源可以是 Web 服务器文件系统中的静态文件，也可以是根据需要生成内容的软件程序，动态内容资源可以实时显示摄像头内容、交易股票、搜索数据、购买商品等等，可以根据身份、请求信息、时段等不同来产生不同内容。 所有能够提供 Web 内容的东西都是 Web 资源 只要是内容来源就是资源，扫描图书馆书架的 Web 网关是资源，因特网搜索引擎也是资源 MIME 类型（MIME type）（MIME：Multipurpose Internet Mail Extension，多用途因特网邮件扩展）发源于电子邮件系统，又被 HTTP 采纳以标记因特网上各种不同数据类型的多媒体内容。 [maɪm] Web 服务器会为所有 HTTP 对象数据附加一个 MIME 类型。Web 浏览器取回对象时会去查看相关的 MIME 类型，看是否知道应该如何处理这个对象。 MIME 类型是一种文本标记，由主类型和子类型构成，中间由斜杠分隔。如 HTML 文档为 text/html；ASCII 文档为 text/plain；GIF 图片为 image/gif。附录 D 提供了完整的 MIME 类型。 powered by Gitbook更新时间： 2020-06-16 18:32:08 "},"appendix.html":{"url":"appendix.html","title":"附录","keywords":"","body":"附录 D MIME 类型 powered by Gitbook更新时间： 2020-06-16 18:32:08 "},"appendix-d.html":{"url":"appendix-d.html","title":"D MIME 类型","keywords":"","body":"MIME 媒体类型 MIME 类型是描述报文实体主题内容的一些标准化名称。 这个附录说明了 MIME 类型工作方式、如何注册新的类型、去哪里查找更多相关信息 背景知识 MIME 类型最初是为多媒体电子邮件而开发的（Multipurpose Internet Mail Extension，多用途因特网邮件扩展） MIME 主要由下列 5 份文档定义（RFC 2045～2049） RFC 2045，描述了 MIME 报文结构概况，介绍了 HTTP 借用的 Content-Type 首部 RFC 2046，介绍了 MIME 类型及其结构 RFC 2047，定义了一些在首部包含非 ASCII 字符的方式 RFC 2048，如何向 IANA（因特网号码分配机构 Internet Assigned Numbers Authority） 注册 MIME 值 RFC 2049，详细介绍一致性规则和实例 RFC: 请求意见稿（英语：Request for Comments，缩写：RFC）是由互联网工程任务组（IETF）发布的一系列备忘录。文件收集了有关互联网相关信息，以及UNIX和互联网社群的软件文件，以编号排定。目前RFC文件是由互联网协会（ISOC）赞助发行。维基百科 MIME 类型结构 结构：/[; ] 类型和自类型以 / 分隔 若有可选参数，则以 ; 开始（没有参数时不加 ;） 在 HTTP 中，MIME 媒体类型被用于 Content-Type 和 Accept 首部。例如 Content-Type: video/quicktime Content-Type: text/html; charset=\"iso-8859-6\" Content-Type: multipart/mixed; boundary=gc0prJq0M2Yt08j34c0p Accept: image/gif 离散类型（discrete type） MIME 类型可以直接用于描述对象类型，也可以描述其他对象类型的集合或类型包。如果直接用于描述某个类型，就是一种离散类型。 复合类型（composite type） 如果描述的是其他内容的集合或封装包，就被称为复合类型 多部分类型 多部分媒体类型是复合类型。包含多个组建类型，每个组建都有自己的 MIME 类型。例如： 使用 multipart/mixed 声明是多部分类型，通过参数 boundary 指定分界标志。 各部分内容分隔标志：每个【-- + 分界标志】都表示一部分内容的开始，【-- + 分界标志 + --】表示整个的结束。 每部分内容的开头都标记了 Content-type，其内容还可以是多部分类型的（当然也可以是离散类型的），不过其自内容是有缩进的，分隔标志是没有缩进的。 语法 主要由主类型、子类型和可选参数列表组成 主类型可以是预定义类型、IETF 定义的扩展标记，或者实验性标记（以“x-”开头） 常见的主类型：application、audio、chemical、image、message、model、multipart、text、video 子类型可以是主类型（如 text/text）、IANA 注册的子类型、实验性扩展标记（以 x- 开头） 类型和子类型都是由 US-ASCII 字符的子集构成。空格和某些保留分组以及标点符号称为 “tspecials”，是控制字符，不用于类型和子类型。 RFC 2046 定义的语法： 在 IANA 注册 MIME 类型 RFC 2048 书中还讲了注册过程、注册规则、注册模板、MIME 媒体类型注册，这里不做记录 注册树 四种 MIME 类型各有自己的注册规则 MIME 类型表 直接贴图过来，方便以后查找，表中的内容是按照字母顺序排序的 application/* audio/* chemical/* image/* message/* model/* multipart/* text/* video/* 实验类型 powered by Gitbook更新时间： 2020-06-17 14:44:51 "}}